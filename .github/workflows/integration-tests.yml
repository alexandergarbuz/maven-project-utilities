name: Integration Tests with Selenium

on:
  push:
    branches: [ main, add-selenium-tests ]
  pull_request:
    branches: [ main, add-selenium-tests ]

jobs:
  integration-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Install Chrome and ChromeDriver
      run: |
        # Установка Chrome
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
        # Установка ChromeDriver
        CHROME_VERSION=$(google-chrome --version | cut -d " " -f3 | cut -d "." -f1)
        CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}")
        wget -N "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver

    - name: Start Xvfb (Virtual Display)
      run: |
        sudo apt-get install -y xvfb
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

    - name: Build project
      run: mvn clean compile -DskipTests

    - name: Start Spring Boot Application
      run: |
        # Запускаем Spring Boot приложение в фоне
        mvn spring-boot:start -Dspring-boot.run.profiles=test
        
        # Ждем пока приложение поднимется
        echo "Waiting for Spring Boot to start..."
        timeout 300 bash -c 'until curl -s http://localhost:8080/actuator/health | grep "\"status\":\"UP\"" > /dev/null 2>&1; do 
          echo "Spring Boot not ready yet, waiting..."
          sleep 5; 
        done'
        
        if [ $? -ne 0 ]; then
          echo "Spring Boot application failed to start"
          exit 1
        fi
        echo "Spring Boot application started successfully with status UP"

    - name: Run Integration Tests
      env:
        DISPLAY: :99
      run: |
        # Запускаем интеграционные тесты
        mvn failsafe:integration-test failsafe:verify \
          -P run-integration-tests \
          -Dtest.browser=chrome \
          -Dheadless=true \
          -Dwebdriver.chrome.driver=/usr/local/bin/chromedriver \
          -Dapp.url=http://localhost:8080

    - name: Stop Spring Boot Application
      if: always()
      run: |
        echo "Stopping Spring Boot application..."
        mvn spring-boot:stop || true

    - name: Collect logs
      if: always()
      run: |
        echo "=== Surefire reports ==="
        find . -name "*.log" -path "*/target/surefire-reports/*" -exec cat {} \;
        
        echo "=== Failsafe reports ==="
        find . -name "*.log" -path "*/target/failsafe-reports/*" -exec cat {} \;

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          **/target/surefire-reports/**
          **/target/failsafe-reports/**
          **/target/site/jacoco/**

    - name: Publish Test Results
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: Integration Tests Results
        path: '**/target/failsafe-reports/TEST-*.xml'
        reporter: java-junit
        fail-on-error: true